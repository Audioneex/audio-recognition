#!/bin/bash
#
#  Audioneex bootstrap build script
#  --------------------------------
#
#  Usage: 
#
#  $ ./build [options]
#
#  where [options] is one or more of the following
#
#  TARGET         = linux | android
#  ARCH           = x32 | x64  (Linux)
#                   armeabi-v7a | arm64-v8a | x86 | x86_64 (Android)
#  API            = API version number (Android only)
#  BINARY_TYPE    = dynamic | static
#  BUILD_MODE     = debug | release
#  DATASTORE_T    = TCDataStore | CBDataStore
#  WITH_EXAMPLES  = ON | OFF
#  WITH_ID3       = ON | OFF  (for the examples only)
#  WITH_TESTS     = ON | OFF  (for project developers only)
#
#  The paramaters are all optional and if none is specified the target and 
#  architecture will be automatically detected from the environment, while
#  the others will be set to default values (dynamic binary, release mode,
#  TCDataStore and no WITH_* options).
#
#


# Paramaters:
#    $1 - Error message
# Returns:
#    null
function error()
{
  echo "ERROR: [$(basename $0)] $1"
  exit 1
}

# Paramaters:
#    $1 - Param name
# Returns:
#    The param value
function get_param_value()
{
   local PARAM=$1
   for p in "${PARAMS[@]}"; do
       if [[ "$p" =~ ^${PARAM}= ]]; then
          echo "${p/${PARAM}=}"
          break
       fi
   done
}

# Paramaters:
# Returns:
#    The path to the NDK root
function get_ndk_home()
{
    local NDKHOME=$ANDROID_NDK_HOME
    
    if [ ! $NDKHOME ]; then
        NDKHOME=$ANDROID_NDK_ROOT
        if [ ! $NDKHOME ]; then
            local MSG=(
               "Could not find the NDK. Please set either the"
               "ANDROID_NDK_HOME or ANDROID_NDK_ROOT environment"
               "variable with the path to your NDK installation"
               "directory."
            )
            error "${MSG[*]}"
        fi
    fi
   echo "$NDKHOME"
}

function bootstrap_linux()
{
   echo ""
   echo "-- Building for Linux"
   echo ""
   CMAKE_CMD="${DPARAMS[@]} .."
   BUILD_CMD="cmake --build ."
   INSTA_CMD="cmake --build . --target install"
}

function bootstrap_android()
{
   echo ""
   echo "-- Building for Android"
   echo ""
   NDK_HOME=$(get_ndk_home)
   __TOOLCHAIN_FILE=${NDK_HOME}/build/cmake/android.toolchain.cmake
   __ARCH=$(get_param_value "ARCH")
   __API=$(get_param_value "API")
   if [ ! $__API ]; then __API=latest; fi
   CMAKE_CMD="$CMAKE_CMD -DCMAKE_TOOLCHAIN_FILE=${__TOOLCHAIN_FILE}"
   CMAKE_CMD="$CMAKE_CMD -DANDROID_NDK=${NDK_HOME}"
   CMAKE_CMD="$CMAKE_CMD -DANDROID_ABI=${__ARCH}"
   CMAKE_CMD="$CMAKE_CMD -DANDROID_PLATFORM=${__API}"
   CMAKE_CMD="$CMAKE_CMD -DANDROID_TOOLCHAIN=clang"
   CMAKE_CMD="$CMAKE_CMD ${DPARAMS[@]} .."
   BUILD_CMD="cmake --build ."
   INSTA_CMD="cmake --build . --target install"
}


DPARAMS=()
read -ra PARAMS <<< "${*}"
for p in "${PARAMS[@]}"; do
    DPARAMS+=("-DAX_$p")
done

TARGET_PLATFORM=$(get_param_value "TARGET")
if [ ! $TARGET_PLATFORM ]; then TARGET_PLATFORM=linux; fi
bootstrap_$TARGET_PLATFORM

if [ -d "_build" ]; then rm -rf _build; fi
mkdir -p _build && cd _build
cmake $CMAKE_CMD && $BUILD_CMD && $INSTA_CMD && cd ..

